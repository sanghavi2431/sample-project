name: Node.js Docker CI/CD

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v2

    # Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    # Install dependencies
    - name: Install dependencies
      run: npm install

    # Log in to Docker Hub (replace with your Docker Hub credentials)
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # Step to remove old 'latest' image (if exists)
    - name: Remove old latest Docker image
      run: |
        old_image_digest=$(curl -s -H "Authorization: Bearer ${{ secrets.DOCKER_TOKEN }}" \
        "https://hub.docker.com/v2/repositories/${{ secrets.DOCKER_USERNAME }}/testcicd/tags/latest" \
        | jq -r '.images[0].digest')

        if [ "$old_image_digest" != "null" ]; then
          curl -X DELETE -H "Authorization: Bearer ${{ secrets.DOCKER_TOKEN }}" \
          "https://hub.docker.com/v2/repositories/${{ secrets.DOCKER_USERNAME }}/testcicd/manifests/$old_image_digest"
        fi

    # Build Docker image with 'latest' tag
    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/testcicd:latest .

    # Push the Docker image to Docker Hub with 'latest' tag
    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/testcicd:latest
